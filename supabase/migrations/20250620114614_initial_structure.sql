create sequence "public"."events_id_seq";

create sequence "public"."profiles_id_seq";

create table "public"."event_attendances" (
    "id" uuid not null,
    "user_id" uuid,
    "event_id" integer,
    "status" text not null,
    "created_at" timestamp without time zone not null
);


alter table "public"."event_attendances" enable row level security;

create table "public"."events" (
    "id" integer not null default nextval('events_id_seq'::regclass),
    "organizer_id" uuid,
    "category" text not null,
    "title" text not null,
    "description" text,
    "date" date not null,
    "time" time without time zone not null,
    "location" text not null,
    "organizer_name" text not null,
    "image_url" text not null,
    "vip_tickets" integer not null,
    "is_trending" boolean not null default false,
    "tickets_sold" integer not null default 0,
    "tickets_remaining" integer not null,
    "price" numeric(10,2) not null,
    "vip_price" numeric(10,2) not null,
    "latitude" double precision,
    "longitude" double precision,
    "venue_details" jsonb,
    "status" text not null,
    "created_at" timestamp without time zone not null,
    "updated_at" timestamp without time zone not null
);


alter table "public"."events" enable row level security;

create table "public"."friendships" (
    "id" uuid not null,
    "requester_id" uuid,
    "addressee_id" uuid,
    "status" text not null,
    "created_at" timestamp without time zone not null,
    "accepted_at" timestamp without time zone
);


alter table "public"."friendships" enable row level security;

create table "public"."profiles" (
    "id" bigint generated by default as identity not null,
    "user_id" uuid,
    "bio" text,
    "location" text,
    "phone" text,
    "date_of_birth" date,
    "interests" text[],
    "photo_url" text,
    "created_at" timestamp without time zone not null,
    "updated_at" timestamp without time zone not null
);


alter table "public"."profiles" enable row level security;

create table "public"."saved_events" (
    "id" uuid not null,
    "user_id" uuid,
    "event_id" integer,
    "created_at" timestamp without time zone not null
);


alter table "public"."saved_events" enable row level security;

create table "public"."tenant_members" (
    "id" uuid not null,
    "user_id" uuid,
    "role" text not null,
    "status" text not null,
    "created_at" timestamp without time zone not null,
    "updated_at" timestamp without time zone not null
);


alter table "public"."tenant_members" enable row level security;

create table "public"."tenant_permissions" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "profile" bigint not null,
    "tenant" text not null
);


alter table "public"."tenant_permissions" enable row level security;

create table "public"."tenants" (
    "id" text not null,
    "name" text not null,
    "domain" text,
    "created_at" timestamp with time zone not null default (now() AT TIME ZONE 'utc'::text)
);


alter table "public"."tenants" enable row level security;

create table "public"."tickets" (
    "id" uuid not null,
    "event_id" integer,
    "user_id" uuid,
    "ticket_type" text not null,
    "ticket_number" text not null,
    "price" numeric(10,2) not null,
    "status" text not null,
    "qr_code" text not null,
    "payment_method" text not null,
    "payment_id" text,
    "created_at" timestamp without time zone not null,
    "updated_at" timestamp without time zone not null
);


alter table "public"."tickets" enable row level security;

alter sequence "public"."events_id_seq" owned by "public"."events"."id";

CREATE UNIQUE INDEX event_attendances_pkey ON public.event_attendances USING btree (id);

CREATE UNIQUE INDEX events_pkey ON public.events USING btree (id);

CREATE UNIQUE INDEX friendships_pkey ON public.friendships USING btree (id);

CREATE UNIQUE INDEX profiles_id_key ON public.profiles USING btree (id);

CREATE UNIQUE INDEX profiles_pkey ON public.profiles USING btree (id);

CREATE UNIQUE INDEX profiles_user_id_key ON public.profiles USING btree (user_id);

CREATE UNIQUE INDEX saved_events_pkey ON public.saved_events USING btree (id);

CREATE UNIQUE INDEX tenant_members_pkey ON public.tenant_members USING btree (id);

CREATE UNIQUE INDEX tenant_permissions_pkey ON public.tenant_permissions USING btree (id);

CREATE UNIQUE INDEX tenants_pkey ON public.tenants USING btree (id);

CREATE UNIQUE INDEX tickets_pkey ON public.tickets USING btree (id);

CREATE UNIQUE INDEX tickets_ticket_number_key ON public.tickets USING btree (ticket_number);

alter table "public"."event_attendances" add constraint "event_attendances_pkey" PRIMARY KEY using index "event_attendances_pkey";

alter table "public"."events" add constraint "events_pkey" PRIMARY KEY using index "events_pkey";

alter table "public"."friendships" add constraint "friendships_pkey" PRIMARY KEY using index "friendships_pkey";

alter table "public"."profiles" add constraint "profiles_pkey" PRIMARY KEY using index "profiles_pkey";

alter table "public"."saved_events" add constraint "saved_events_pkey" PRIMARY KEY using index "saved_events_pkey";

alter table "public"."tenant_members" add constraint "tenant_members_pkey" PRIMARY KEY using index "tenant_members_pkey";

alter table "public"."tenant_permissions" add constraint "tenant_permissions_pkey" PRIMARY KEY using index "tenant_permissions_pkey";

alter table "public"."tenants" add constraint "tenants_pkey" PRIMARY KEY using index "tenants_pkey";

alter table "public"."tickets" add constraint "tickets_pkey" PRIMARY KEY using index "tickets_pkey";

alter table "public"."event_attendances" add constraint "event_attendances_event_id_fkey" FOREIGN KEY (event_id) REFERENCES events(id) not valid;

alter table "public"."event_attendances" validate constraint "event_attendances_event_id_fkey";

alter table "public"."event_attendances" add constraint "event_attendances_status_check" CHECK ((status = ANY (ARRAY['going'::text, 'interested'::text, 'not_going'::text]))) not valid;

alter table "public"."event_attendances" validate constraint "event_attendances_status_check";

alter table "public"."event_attendances" add constraint "event_attendances_user_id_fkey" FOREIGN KEY (user_id) REFERENCES auth.users(id) not valid;

alter table "public"."event_attendances" validate constraint "event_attendances_user_id_fkey";

alter table "public"."events" add constraint "events_organizer_id_fkey" FOREIGN KEY (organizer_id) REFERENCES auth.users(id) not valid;

alter table "public"."events" validate constraint "events_organizer_id_fkey";

alter table "public"."events" add constraint "events_status_check" CHECK ((status = ANY (ARRAY['draft'::text, 'published'::text, 'cancelled'::text]))) not valid;

alter table "public"."events" validate constraint "events_status_check";

alter table "public"."friendships" add constraint "friendships_addressee_id_fkey" FOREIGN KEY (addressee_id) REFERENCES auth.users(id) not valid;

alter table "public"."friendships" validate constraint "friendships_addressee_id_fkey";

alter table "public"."friendships" add constraint "friendships_requester_id_fkey" FOREIGN KEY (requester_id) REFERENCES auth.users(id) not valid;

alter table "public"."friendships" validate constraint "friendships_requester_id_fkey";

alter table "public"."friendships" add constraint "friendships_status_check" CHECK ((status = ANY (ARRAY['pending'::text, 'accepted'::text, 'rejected'::text]))) not valid;

alter table "public"."friendships" validate constraint "friendships_status_check";

alter table "public"."profiles" add constraint "profiles_id_key" UNIQUE using index "profiles_id_key";

alter table "public"."profiles" add constraint "profiles_user_id_fkey" FOREIGN KEY (user_id) REFERENCES auth.users(id) not valid;

alter table "public"."profiles" validate constraint "profiles_user_id_fkey";

alter table "public"."profiles" add constraint "profiles_user_id_key" UNIQUE using index "profiles_user_id_key";

alter table "public"."saved_events" add constraint "saved_events_event_id_fkey" FOREIGN KEY (event_id) REFERENCES events(id) not valid;

alter table "public"."saved_events" validate constraint "saved_events_event_id_fkey";

alter table "public"."saved_events" add constraint "saved_events_user_id_fkey" FOREIGN KEY (user_id) REFERENCES auth.users(id) not valid;

alter table "public"."saved_events" validate constraint "saved_events_user_id_fkey";

alter table "public"."tenant_members" add constraint "tenant_members_role_check" CHECK ((role = ANY (ARRAY['owner'::text, 'admin'::text, 'member'::text]))) not valid;

alter table "public"."tenant_members" validate constraint "tenant_members_role_check";

alter table "public"."tenant_members" add constraint "tenant_members_status_check" CHECK ((status = ANY (ARRAY['active'::text, 'invited'::text, 'suspended'::text]))) not valid;

alter table "public"."tenant_members" validate constraint "tenant_members_status_check";

alter table "public"."tenant_members" add constraint "tenant_members_user_id_fkey" FOREIGN KEY (user_id) REFERENCES auth.users(id) not valid;

alter table "public"."tenant_members" validate constraint "tenant_members_user_id_fkey";

alter table "public"."tenant_permissions" add constraint "tenant_permissions_profile_fkey" FOREIGN KEY (profile) REFERENCES profiles(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."tenant_permissions" validate constraint "tenant_permissions_profile_fkey";

alter table "public"."tenant_permissions" add constraint "tenant_permissions_tenant_fkey" FOREIGN KEY (tenant) REFERENCES tenants(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."tenant_permissions" validate constraint "tenant_permissions_tenant_fkey";

alter table "public"."tickets" add constraint "tickets_event_id_fkey" FOREIGN KEY (event_id) REFERENCES events(id) not valid;

alter table "public"."tickets" validate constraint "tickets_event_id_fkey";

alter table "public"."tickets" add constraint "tickets_payment_method_check" CHECK ((payment_method = ANY (ARRAY['stripe'::text, 'mpesa'::text]))) not valid;

alter table "public"."tickets" validate constraint "tickets_payment_method_check";

alter table "public"."tickets" add constraint "tickets_status_check" CHECK ((status = ANY (ARRAY['pending'::text, 'confirmed'::text, 'cancelled'::text]))) not valid;

alter table "public"."tickets" validate constraint "tickets_status_check";

alter table "public"."tickets" add constraint "tickets_ticket_number_key" UNIQUE using index "tickets_ticket_number_key";

alter table "public"."tickets" add constraint "tickets_ticket_type_check" CHECK ((ticket_type = ANY (ARRAY['standard'::text, 'vip'::text]))) not valid;

alter table "public"."tickets" validate constraint "tickets_ticket_type_check";

alter table "public"."tickets" add constraint "tickets_user_id_fkey" FOREIGN KEY (user_id) REFERENCES auth.users(id) not valid;

alter table "public"."tickets" validate constraint "tickets_user_id_fkey";

grant delete on table "public"."event_attendances" to "anon";

grant insert on table "public"."event_attendances" to "anon";

grant references on table "public"."event_attendances" to "anon";

grant select on table "public"."event_attendances" to "anon";

grant trigger on table "public"."event_attendances" to "anon";

grant truncate on table "public"."event_attendances" to "anon";

grant update on table "public"."event_attendances" to "anon";

grant delete on table "public"."event_attendances" to "authenticated";

grant insert on table "public"."event_attendances" to "authenticated";

grant references on table "public"."event_attendances" to "authenticated";

grant select on table "public"."event_attendances" to "authenticated";

grant trigger on table "public"."event_attendances" to "authenticated";

grant truncate on table "public"."event_attendances" to "authenticated";

grant update on table "public"."event_attendances" to "authenticated";

grant delete on table "public"."event_attendances" to "service_role";

grant insert on table "public"."event_attendances" to "service_role";

grant references on table "public"."event_attendances" to "service_role";

grant select on table "public"."event_attendances" to "service_role";

grant trigger on table "public"."event_attendances" to "service_role";

grant truncate on table "public"."event_attendances" to "service_role";

grant update on table "public"."event_attendances" to "service_role";

grant delete on table "public"."events" to "anon";

grant insert on table "public"."events" to "anon";

grant references on table "public"."events" to "anon";

grant select on table "public"."events" to "anon";

grant trigger on table "public"."events" to "anon";

grant truncate on table "public"."events" to "anon";

grant update on table "public"."events" to "anon";

grant delete on table "public"."events" to "authenticated";

grant insert on table "public"."events" to "authenticated";

grant references on table "public"."events" to "authenticated";

grant select on table "public"."events" to "authenticated";

grant trigger on table "public"."events" to "authenticated";

grant truncate on table "public"."events" to "authenticated";

grant update on table "public"."events" to "authenticated";

grant delete on table "public"."events" to "service_role";

grant insert on table "public"."events" to "service_role";

grant references on table "public"."events" to "service_role";

grant select on table "public"."events" to "service_role";

grant trigger on table "public"."events" to "service_role";

grant truncate on table "public"."events" to "service_role";

grant update on table "public"."events" to "service_role";

grant delete on table "public"."friendships" to "anon";

grant insert on table "public"."friendships" to "anon";

grant references on table "public"."friendships" to "anon";

grant select on table "public"."friendships" to "anon";

grant trigger on table "public"."friendships" to "anon";

grant truncate on table "public"."friendships" to "anon";

grant update on table "public"."friendships" to "anon";

grant delete on table "public"."friendships" to "authenticated";

grant insert on table "public"."friendships" to "authenticated";

grant references on table "public"."friendships" to "authenticated";

grant select on table "public"."friendships" to "authenticated";

grant trigger on table "public"."friendships" to "authenticated";

grant truncate on table "public"."friendships" to "authenticated";

grant update on table "public"."friendships" to "authenticated";

grant delete on table "public"."friendships" to "service_role";

grant insert on table "public"."friendships" to "service_role";

grant references on table "public"."friendships" to "service_role";

grant select on table "public"."friendships" to "service_role";

grant trigger on table "public"."friendships" to "service_role";

grant truncate on table "public"."friendships" to "service_role";

grant update on table "public"."friendships" to "service_role";

grant delete on table "public"."profiles" to "anon";

grant insert on table "public"."profiles" to "anon";

grant references on table "public"."profiles" to "anon";

grant select on table "public"."profiles" to "anon";

grant trigger on table "public"."profiles" to "anon";

grant truncate on table "public"."profiles" to "anon";

grant update on table "public"."profiles" to "anon";

grant delete on table "public"."profiles" to "authenticated";

grant insert on table "public"."profiles" to "authenticated";

grant references on table "public"."profiles" to "authenticated";

grant select on table "public"."profiles" to "authenticated";

grant trigger on table "public"."profiles" to "authenticated";

grant truncate on table "public"."profiles" to "authenticated";

grant update on table "public"."profiles" to "authenticated";

grant delete on table "public"."profiles" to "service_role";

grant insert on table "public"."profiles" to "service_role";

grant references on table "public"."profiles" to "service_role";

grant select on table "public"."profiles" to "service_role";

grant trigger on table "public"."profiles" to "service_role";

grant truncate on table "public"."profiles" to "service_role";

grant update on table "public"."profiles" to "service_role";

grant delete on table "public"."saved_events" to "anon";

grant insert on table "public"."saved_events" to "anon";

grant references on table "public"."saved_events" to "anon";

grant select on table "public"."saved_events" to "anon";

grant trigger on table "public"."saved_events" to "anon";

grant truncate on table "public"."saved_events" to "anon";

grant update on table "public"."saved_events" to "anon";

grant delete on table "public"."saved_events" to "authenticated";

grant insert on table "public"."saved_events" to "authenticated";

grant references on table "public"."saved_events" to "authenticated";

grant select on table "public"."saved_events" to "authenticated";

grant trigger on table "public"."saved_events" to "authenticated";

grant truncate on table "public"."saved_events" to "authenticated";

grant update on table "public"."saved_events" to "authenticated";

grant delete on table "public"."saved_events" to "service_role";

grant insert on table "public"."saved_events" to "service_role";

grant references on table "public"."saved_events" to "service_role";

grant select on table "public"."saved_events" to "service_role";

grant trigger on table "public"."saved_events" to "service_role";

grant truncate on table "public"."saved_events" to "service_role";

grant update on table "public"."saved_events" to "service_role";

grant delete on table "public"."tenant_members" to "anon";

grant insert on table "public"."tenant_members" to "anon";

grant references on table "public"."tenant_members" to "anon";

grant select on table "public"."tenant_members" to "anon";

grant trigger on table "public"."tenant_members" to "anon";

grant truncate on table "public"."tenant_members" to "anon";

grant update on table "public"."tenant_members" to "anon";

grant delete on table "public"."tenant_members" to "authenticated";

grant insert on table "public"."tenant_members" to "authenticated";

grant references on table "public"."tenant_members" to "authenticated";

grant select on table "public"."tenant_members" to "authenticated";

grant trigger on table "public"."tenant_members" to "authenticated";

grant truncate on table "public"."tenant_members" to "authenticated";

grant update on table "public"."tenant_members" to "authenticated";

grant delete on table "public"."tenant_members" to "service_role";

grant insert on table "public"."tenant_members" to "service_role";

grant references on table "public"."tenant_members" to "service_role";

grant select on table "public"."tenant_members" to "service_role";

grant trigger on table "public"."tenant_members" to "service_role";

grant truncate on table "public"."tenant_members" to "service_role";

grant update on table "public"."tenant_members" to "service_role";

grant delete on table "public"."tenant_permissions" to "anon";

grant insert on table "public"."tenant_permissions" to "anon";

grant references on table "public"."tenant_permissions" to "anon";

grant select on table "public"."tenant_permissions" to "anon";

grant trigger on table "public"."tenant_permissions" to "anon";

grant truncate on table "public"."tenant_permissions" to "anon";

grant update on table "public"."tenant_permissions" to "anon";

grant delete on table "public"."tenant_permissions" to "authenticated";

grant insert on table "public"."tenant_permissions" to "authenticated";

grant references on table "public"."tenant_permissions" to "authenticated";

grant select on table "public"."tenant_permissions" to "authenticated";

grant trigger on table "public"."tenant_permissions" to "authenticated";

grant truncate on table "public"."tenant_permissions" to "authenticated";

grant update on table "public"."tenant_permissions" to "authenticated";

grant delete on table "public"."tenant_permissions" to "service_role";

grant insert on table "public"."tenant_permissions" to "service_role";

grant references on table "public"."tenant_permissions" to "service_role";

grant select on table "public"."tenant_permissions" to "service_role";

grant trigger on table "public"."tenant_permissions" to "service_role";

grant truncate on table "public"."tenant_permissions" to "service_role";

grant update on table "public"."tenant_permissions" to "service_role";

grant delete on table "public"."tenants" to "anon";

grant insert on table "public"."tenants" to "anon";

grant references on table "public"."tenants" to "anon";

grant select on table "public"."tenants" to "anon";

grant trigger on table "public"."tenants" to "anon";

grant truncate on table "public"."tenants" to "anon";

grant update on table "public"."tenants" to "anon";

grant delete on table "public"."tenants" to "authenticated";

grant insert on table "public"."tenants" to "authenticated";

grant references on table "public"."tenants" to "authenticated";

grant select on table "public"."tenants" to "authenticated";

grant trigger on table "public"."tenants" to "authenticated";

grant truncate on table "public"."tenants" to "authenticated";

grant update on table "public"."tenants" to "authenticated";

grant delete on table "public"."tenants" to "service_role";

grant insert on table "public"."tenants" to "service_role";

grant references on table "public"."tenants" to "service_role";

grant select on table "public"."tenants" to "service_role";

grant trigger on table "public"."tenants" to "service_role";

grant truncate on table "public"."tenants" to "service_role";

grant update on table "public"."tenants" to "service_role";

grant delete on table "public"."tickets" to "anon";

grant insert on table "public"."tickets" to "anon";

grant references on table "public"."tickets" to "anon";

grant select on table "public"."tickets" to "anon";

grant trigger on table "public"."tickets" to "anon";

grant truncate on table "public"."tickets" to "anon";

grant update on table "public"."tickets" to "anon";

grant delete on table "public"."tickets" to "authenticated";

grant insert on table "public"."tickets" to "authenticated";

grant references on table "public"."tickets" to "authenticated";

grant select on table "public"."tickets" to "authenticated";

grant trigger on table "public"."tickets" to "authenticated";

grant truncate on table "public"."tickets" to "authenticated";

grant update on table "public"."tickets" to "authenticated";

grant delete on table "public"."tickets" to "service_role";

grant insert on table "public"."tickets" to "service_role";

grant references on table "public"."tickets" to "service_role";

grant select on table "public"."tickets" to "service_role";

grant trigger on table "public"."tickets" to "service_role";

grant truncate on table "public"."tickets" to "service_role";

grant update on table "public"."tickets" to "service_role";


